não_terminais,typeInt,typeDouble,symbol_parameter_init,id,double,typeBoolean,reserved_prt,reserved_scn,laps,circuit,pitEntry,typeStr,typeChar,op_arit_sum,op_arit_sub,integer,op_arit_mult,op_arit_div,op_arit_pow,op_rel_minor,op_rel_bigger,op_rel_equal,op_rel_not,op_rel_double_equal,op_rel_minor_equal,op_rel_bigger_equal,op_rel_not_equal,op_log_e,op_log_or,end_line,bool_false,pitExit,brake,overtake,quotes,$
S,S -> <BEGIN>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RESERVED_TYPES,RESERVED_TYPES -> typeInt,RESERVED_TYPES -> typeDouble,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BEGIN,BEGIN -> typeInt reserved_main symbol_parameter_init symbol_parameter_end symbol_op_end <CODE_BLOCK> symbol_op_end,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CODE_BLOCK,CODE_BLOCK -> <ATTRIBUTION> <CODE_BLOCK>,CODE_BLOCK -> <ATTRIBUTION> <CODE_BLOCK>,CODE_BLOCK -> <EXPRESSION> <CODE_BLOCK>,CODE_BLOCK -> <EXPRESSION> <CODE_BLOCK>,CODE_BLOCK -> <EXPRESSION> <CODE_BLOCK>,CODE_BLOCK -> <ATRIBUTION_BOOL> <CODE_BLOCK>,CODE_BLOCK -> <PRINT> <CODE_BLOCK>,CODE_BLOCK -> <SCAN> <CODE_BLOCK>,CODE_BLOCK -> <LAPS> <CODE_BLOCK>,CODE_BLOCK -> <CIRCUIT> <CODE_BLOCK>,CODE_BLOCK -> <PIT> <CODE_BLOCK>,CODE_BLOCK -> <ATTRIBUTION_STR> <CODE_BLOCK>,CODE_BLOCK -> <ATTRIBUTION_CHAR> <CODE_BLOCK>,,,CODE_BLOCK -> <EXPRESSION> <CODE_BLOCK>,,,,,,,,,,,,,,,,,,,,CODE_BLOCK -> ε
EXPRESSION,,,EXPRESSION -> <MULT_DIV> <EXPRESSION'> end_line,EXPRESSION -> <MULT_DIV> <EXPRESSION'> end_line,EXPRESSION -> <MULT_DIV> <EXPRESSION'> end_line,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EXPRESSION',,,,,,,,,,,,,,EXPRESSION' -> op_arit_sum <MULT_DIV> <EXPRESSION'>,EXPRESSION' -> op_arit_sub <MULT_DIV> <EXPRESSION'>,,,,,,,,,,,,,,,,,,,,,EXPRESSION' -> ε
MULT_DIV,,,MULT_DIV -> <POW> <MULT_DIV'>,MULT_DIV -> <POW> <MULT_DIV'>,MULT_DIV -> <POW> <MULT_DIV'>,,,,,,,,,,,MULT_DIV -> <POW> <MULT_DIV'>,,,,,,,,,,,,,,,,,,,,
MULT_DIV',,,,,,,,,,,,,,,,,MULT_DIV' -> op_arit_mult <POW> <MULT_DIV'>,MULT_DIV' -> op_arit_div <POW> <MULT_DIV'>,,,,,,,,,,,,,,,,,,MULT_DIV' -> ε
POW,,,POW -> <VAR> <POW'>,POW -> <VAR> <POW'>,POW -> <VAR> <POW'>,,,,,,,,,,,POW -> <VAR> <POW'>,,,,,,,,,,,,,,,,,,,,
POW',,,,,,,,,,,,,,,,,,,POW' -> op_arit_pow <VAR> <POW'> ,,,,,,,,,,,,,,,,,"POW' -> ε
"
VAR,,,VAR -> symbol_parameter_init <EXPRESSION> symbol_parameter_end,VAR -> id,VAR -> double,,,,,,,,,,,VAR -> intenger,,,,,,,,,,,,,,,,,,,,
REL,,,REL -> <EXPRESSION> <REL_OP> <EXPRESSION>,REL -> <EXPRESSION> <REL_OP> <EXPRESSION>,REL -> <EXPRESSION> <REL_OP> <EXPRESSION>,,,,,,,,,,,REL -> <EXPRESSION> <REL_OP> <EXPRESSION>,,,,,,,,,,,,,,,,,,,,
REL_OP,,,,,,,,,,,,,,,,,,,,REL_OP -> op_rel_minor,REL_OP -> op_rel_bigger,REL_OP -> op_rel_equal,REL_OP -> op_rel_not,REL_OP -> op_rel_double_equal,REL_OP -> op_rel_minor_equal,REL_OP -> op_rel_bigger_equal ,REL_OP -> op_rel_not_equal ,,,,,,,,,
LOGIC,,,LOGIC -> <EXPRESSION> <LOGIC_OP> <EXPRESSION>,LOGIC -> <EXPRESSION> <LOGIC_OP> <EXPRESSION>,LOGIC -> <EXPRESSION> <LOGIC_OP> <EXPRESSION>,,,,,,,,,,,LOGIC -> <EXPRESSION> <LOGIC_OP> <EXPRESSION>,,,,,,,,,,,,,,,,,,,,
LOGIC_OP,,,,,,,,,,,,,,,,,,,,,,,,,,,,LOGIC_OP -> op_log_e_function,LOGIC_OP -> op_log_or_function,,,,,,,
ATTRIBUTION,ATTRIBUTION -> <RESERVED_TYPES> <ATTRIBUTION'>,ATTRIBUTION -> <RESERVED_TYPES> <ATTRIBUTION'>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ATTRIBUTION',,,,ATTRIBUTION' -> id <ATTRIBUTION''>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ATTRIBUTION'',,,,,,,,,,,,,,,,,,,,,,ATTRIBUTION'' -> op_rel_equal <EXPRESSION>,,,,,,,,ATTRIBUTION'' -> end_line,,,,,,
ATRIBUTION_BOOL,,,,,,ATRIBUTION_BOOL -> typeBoolean id <ATRIBUTION_BOOL'>,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ATRIBUTION_BOOL',,,,,,,,,,,,,,,,,,,,,,ATRIBUTION_BOOL' -> op_rel_equal <ATTRIBUTION_BOOL''> ,,,,,,,,ATRIBUTION_BOOL' -> endline,,,,,,
ATRIBUTION_BOOL'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ATRIBUTION_BOOL'' -> bool_false end_line,ATRIBUTION_BOOL'' -> bool_true end_line,,,,
ATTRIBUTION_STR,,,,,,,,,,,,ATTRIBUTION_STR -> typeStr id <ATTRIBUTION_STR'>,,,,,,,,,,,,,,,,,,,,,,,,
ATTRIBUTION_STR',,,,,,,,,,,,,,,,,,,,,,ATTRIBUTION_STR' -> op_rel_equal quotes all_except_quotes quotes end_line,,,,,,,,ATTRIBUTION_STR' ->  end_line,,,,,,
ATTRIBUTION_CHAR,,,,,,,,,,,,,ATTRIBUTION_CHAR -> typeChar id <ATTRIBUTION_CHAR'>,,,,,,,,,,,,,,,,,,,,,,,
ATTRIBUTION_CHAR',,,,,,,,,,,,,,,,,,,,,,ATTRIBUTION_CHAR' -> op_rel_equal quotes char_regex quotes end_line,,,,,,,,ATTRIBUTION_CHAR' -> end_line,,,,,,
PRINT,,,,,,,PRINT -> reserved_prt symbol_parameter_init <ID_OR_STRING> symbol_parameter_end end_line,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ID_OR_STRING,,,,ID_OR_STRING -> id <ID_OR_STRING'>,id <ID_OR_STRING'>  double <ID_OR_STRING'>,,,,,,,,,,,ID_OR_STRING -> integer <ID_OR_STRING'>,,,,,,,,,,,,,,,,,,,ID_OR_STRING -> quotes all_except_quotes quotes <ID_OR_STRING'>,
ID_OR_STRING',,,,,,,,,,,,,,ID_OR_STRING' -> op_arit_sum <ID_OR_STRING''> <ID_OR_STRING'>,,,,,,,,,,,,,,,,,,,,,,ID_OR_STRING' -> ε
ID_OR_STRING'',,,,ID_OR_STRING'' -> id,ID_OR_STRING'' -> double,,,,,,,,,,,ID_OR_STRING'' -> integer,,,,,,,,,,,,,,,,,,,ID_OR_STRING'' -> quotes all_except_quotes quotes,
SCAN,,,,,,,,SCAN -> reserved_scn symbol_parameter_init id symbol_parameter_end end_line,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LAPS,,,,,,,,,LAPS -> laps symbol_parameter_init <INIT_LAPS>  op_rel_equal <ID_OR_VALUE> symbol_op_mid id <REL_SYMBOLS> <ID_OR_VALUE> symbol_op_mid id op_rel_equal <LAPS_INC> symbol_parameter_end symbol_op_init <CODE_BLOCK> symbol_op_end,,,,,,,,,,,,,,,,,,,,,,,,,,,
INIT_LAPS,INIT_LAPS -> typeInt id,,,INIT_LAPS ->  id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LAPS_INC,,,,LAPS_INC -> id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,LAPS_INC -> brake,LAPS_INC -> overtake,,
LAPS_SYMBOLS,,,,,,,,,,,,,,<LAPS_SYMBOLS> -> op_arit_sum,<LAPS_SYMBOLS> -> op_arit_sub,,<LAPS_SYMBOLS> -> op_arit_mult,<LAPS_SYMBOLS> -> op_arit_div,,,,,,,,,,,,,,,,,,
ID_OR_VALUE,,,,<ID_OR_VALUE> -> id,,,,,,,,,,,,<ID_OR_VALUE> -> integer,,,,,,,,,,,,,,,,,,,,
CIRCUIT,,,,,,,,,,CIRCUIT -> circuit symbol_parameter_init <CIRCUIT_LOG> symbol_parameter_end symbol_op_init <CODE_BLOCK> symbol_op_end,,,,,,,,,,,,,,,,,,,,,,,,,,
CIRCUIT_LOG,,,,CIRCUIT_LOG -> id <CIRCUIT_LOG'> ,CIRCUIT_LOG -> double,,,,,,,,,,,CIRCUIT_LOG -> integer,,,,,,,,,,,,,,,,,,,,
CIRCUIT_LOG',,,,,,,,,,,,,,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,CIRCUIT_LOG' -> <LOOPS_SYMBOLS> <CIRCUIT_LOG>,,,,,,,CIRCUIT_LOG'-> ε
LOOPS_SYMBOLS,,,,,,,,,,,,,,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <REL_SYMBOLS> ,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,LOOPS_SYMBOLS -> <ARIT_SYMBOLS>,,,,,,,
ARIT_SYMBOLS,,,,,,,,,,,,,,<ARIT_SYMBOLS> -> op_arit_sum,<ARIT_SYMBOLS> -> op_arit_sub,,<ARIT_SYMBOLS> -> op_arit_mult,<ARIT_SYMBOLS> -> op_arit_div,<ARIT_SYMBOLS> -> op_arit_pow,,,,,,,,,,,,,,,,,
LOG_SYMBOLS,,,,,,,,,,,,,,,,,,,,,,,,,,,,LOG_SYMBOLS -> op_log_e,LOG_SYMBOLS -> op_log_or,,,,,,,
REL_SYMBOLS,,,,,,,,,,,,,,,,,,,,<REL_SYMBOLS> -> op_rel_minor,<REL_SYMBOLS> -> op_rel_bigger,,,<REL_SYMBOLS> -> op_rel_double_equal,<REL_SYMBOLS> -> op_rel_minor_equal,<REL_SYMBOLS> -> op_rel_bigger_equal,<REL_SYMBOLS> -> op_rel_not_equal,,,,,,,,,
PIT,,,,,,,,,,,PIT-> pitEntry symbol_parameter_init <PIT_LOG> symbol_parameter_end symbol_block_init <CODE_BLOCK> symbol_block_end <PIT_EXIT> PIT_LOG-> id <PIT_LOG'> | integer <PIT_LOG'> | double <PIT_LOG'>,,,,,,,,,,,,,,,,,,,,,,,,,
PIT_LOG,,,,PIT_LOG-> id <PIT_LOG'>,PIT_LOG-> double <PIT_LOG'>,,,,,,,,,,,PIT_LOG-> integer <PIT_LOG'>,,,,,,,,,,,,,,,,,,,,
PIT_LOG',,,,,,,,,,,,,,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,PIT_LOG'-> <LOOPS_SYMBOLS> <PIT_LOG>,,,,,,,PIT_LOG'->  ε
PIT_EXIT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PIT_EXIT -> pitExit symbol_parameter_init CODE_BLOCK symbol_block_end,,,,PIT_EXIT -> ε